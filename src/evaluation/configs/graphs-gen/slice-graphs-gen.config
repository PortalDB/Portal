[query-1]
type = line
name = slice_dblp_vertices
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='dblp', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='dblp', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='dblp', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='dblp', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.nodes) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='dblp' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select sum(c.nodes) as count, timestampdiff(year, f.date1, f.date2) as Years from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='dblp' group by f.date1, f.date2;

[query-2]
type = line
name = slice_dblp_edges
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='dblp', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='dblp', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='dblp', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='dblp', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.edges) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='dblp' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select sum(c.edges) as count, timestampdiff(year, f.date1, f.date2) as Years from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='dblp' group by f.date1, f.date2;

[query-3]
type = line
name = slice_ngrams_vertices
xlabel = Select size, tuples
ylabel = Runtime, minutes
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='nGrams', h.runTime/60000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='nGrams', h.runTime/60000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='nGrams', h.runTime/60000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='nGrams', h.runTime/60000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='nGramsstructure', h.runTime/60000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='nGramsstructure', h.runTime/60000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='nGramsstructure', h.runTime/60000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='nGramsstructure', h.runTime/60000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.nodes) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='nGrams' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select sum(c.nodes) as count, timestampdiff(year, f.date1, f.date2) as Years from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='nGrams' group by f.date1, f.date2;

[query-4]
type = line
name = slice_ngrams_edges
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='nGrams', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='nGrams', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='nGrams', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='nGrams', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='nGramsstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='nGramsstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='nGramsstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='nGramsstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.edges) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='nGrams' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select sum(c.edges) as count, timestampdiff(year, f.date1, f.date2) as Years from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='nGrams' group by f.date1, f.date2;

[query-5]
type = line
name = slice_ukdelis_vertices
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.nodes) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'ukdelis%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='ukdelis' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;

[query-6]
type = line
name = slice_ukdelis_edges
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='ukdelis', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='ukdelisstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.edges) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'ukdelis%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='ukdelis' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;

[query-7]
type = line
name = slice_wikitalk_vertices
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, c.nodes as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'wikitalk%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') = str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') = str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='wikitalk' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select c.nodes as count, timestampdiff(month, f.date1, f.date2) as Months from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'wikitalk%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') = str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') = str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='wikitalk' group by f.date1, f.date2 order by 1;

[query-8]
type = line
name = slice_wikitalk_edges
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='wikitalkstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, c.edges as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'wikitalk%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') = str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') = str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='wikitalk' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select c.edges as count, timestampdiff(month, f.date1, f.date2) as Months from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'wikitalk%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') = str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') = str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='wikitalk' group by f.date1, f.date2 order by 1;

[query-9]
type = line
name = slice_twitter_vertices
xlabel = Select size, tuples
ylabel = Runtime, minutes
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='twitter', h.runTime/60000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='twitter', h.runTime/60000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='twitter', h.runTime/60000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='twitter', h.runTime/60000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, c.nodes as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'twitter%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') = str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') = str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='twitter' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select c.nodes as count, timestampdiff(month, f.date1, f.date2) as Months from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'twitter%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') = str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') = str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='twitter' group by f.date1, f.date2 order by 1;

[query-10]
type = line
name = slice_dblp_materialize
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select h.count as "Data Size", avg(if(h.graphType='VE' and h.dataset='dblp', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='SG' and h.dataset='dblp', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OG' and h.dataset='dblp', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='dblp', h.runTime/1000, NULL)) as "HG", avg(if(h.graphType='VE' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "VES", avg(if(h.graphType='SG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "RGS", avg(if(h.graphType='OG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "OGS", avg(if(h.graphType='HG' and h.dataset='dblpstructure', h.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.vcount + g.ecount as count, g.dataset from execution e, (select f.query_id, sum(c.nodes) as vcount, sum(c.edges) as ecount, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='dblp' group by f.query_id order by f.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.count order by h.count;
secondaryxlabel = Number of representative graphs
axis-sql = select sum(c.nodes) + sum(c.edges) as count, timestampdiff(year, f.date1, f.date2) as Years from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='dblp' group by f.date1, f.date2;

[query-11]
type = line
name = slice_wikitalk_materialize
xlabel = Number of representative graphs
ylabel = Runtime, seconds
sql = select h.months as "Graphs", avg(if(h.graphType='VE' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "VE", avg(if(h.graphType='RG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "RG", avg(if(h.graphType='OGC' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='wikitalk', h.runTime/1000, NULL)) as "HG" from (select e.runTime, e.graphType, timestampdiff(month, g.date1, g.date2) as months, g.dataset from execution e, (select l.query_id, l.arg1 as dataset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'wikitalk%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as g where e.build_num=0 and e.query_id=g.query_id and e.clusterConfig like '16s%%') as h group by h.months order by h.months;
secondaryxlabel = Result size, vertices + edges, millions
axis-sql = select timestampdiff(month, f.date1, f.date2) as "Graphs", round((sum(c.nodes) + sum(c.edges))/1000000, 2) as count from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'wikitalk') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='wikitalk' group by f.date1, f.date2;

[query-12]
type = line
name = slice_ngrams_materialize
xlabel = Number of representative graphs
ylabel = Runtime, minutes
sql = select h.months as "Graphs", avg(if(h.graphType='VE' and h.dataset='nGrams', h.runTime/60000, NULL)) as "VE", avg(if(h.graphType='RG' and h.dataset='nGrams', h.runTime/60000, NULL)) as "RG", avg(if(h.graphType='OGC' and h.dataset='nGrams', h.runTime/60000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='nGrams', h.runTime/60000, NULL)) as "HG" from (select e.runTime, e.graphType, timestampdiff(year, g.date1, g.date2) as months, g.dataset from execution e, (select l.query_id, l.arg1 as dataset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.months order by h.months;
secondaryxlabel = Result size, vertices + edges, millions
axis-sql = select timestampdiff(year, f.date1, f.date2) as "Graphs", round((sum(c.nodes) + sum(c.edges))/1000000, 1) as count from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='nGrams' group by f.date1, f.date2;

[query-13]
type = line
name = slice_twitter_materialize
xlabel = Number of representative graphs
ylabel = Runtime, minutes
sql = select h.months as "Graphs", avg(if(h.graphType='VE' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "VE", avg(if(h.graphType='RG' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "RG", avg(if(h.graphType='OGC' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "OG", avg(if(h.graphType='HG' and h.dataset='twitterstructure', h.runTime/60000, NULL)) as "HG" from (select e.runTime, e.graphType, timestampdiff(month, g.date1, g.date2) as months, g.dataset from execution e, (select l.query_id, l.arg1 as dataset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'twitter%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as g where e.build_num=0 and e.query_id=g.query_id) as h group by h.months order by h.months;
secondaryxlabel = Result size, vertices + edges, millions
axis-sql = select timestampdiff(month, f.date1, f.date2) as "Graphs", round((sum(c.nodes) + sum(c.edges))/1000000, 1) as count from data_size c, (select distinct l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'twitter%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Materialize' and q.seqNum=3) as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') and c.dataset='twitter' group by f.date1, f.date2;

