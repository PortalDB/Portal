[query-1]
type = line
name = slice_dblp_vertices
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select G.count as "Data Size", avg(if(G.graphType='SG' and G.dataset='dblp', G.runTime/1000, NULL)) as "SG", avg(if(G.graphType='SG' and G.dataset='dblpstructure', G.runTime/1000, NULL)) as "SGS", avg(if(G.graphType='OG' and G.dataset='dblp', G.runTime/1000, NULL)) as "OG", avg(if(G.graphType='OG' and G.dataset='dblpstructure', G.runTime/1000, NULL)) as "OGS", avg(if(G.graphType='HG' and G.dataset='dblp', G.runTime/1000, NULL)) as "HG", avg(if(G.graphType='HG' and G.dataset='dblpstructure', G.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.nodes) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices') as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') group by f.query_id order by f.query_id) as g where e.build_num=3 and e.query_id=g.query_id) as G group by G.count order by G.count;

[query-2]
type = line
name = slice_dblp_edges
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select G.count as "Data Size", avg(if(G.graphType='SG' and G.dataset='dblp', G.runTime/1000, NULL)) as "SG", avg(if(G.graphType='SG' and G.dataset='dblpstructure', G.runTime/1000, NULL)) as "SGS", avg(if(G.graphType='OG' and G.dataset='dblp', G.runTime/1000, NULL)) as "OG", avg(if(G.graphType='OG' and G.dataset='dblpstructure', G.runTime/1000, NULL)) as "OGS", avg(if(G.graphType='HG' and G.dataset='dblp', G.runTime/1000, NULL)) as "HG", avg(if(G.graphType='HG' and G.dataset='dblpstructure', G.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.edges) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'dblp%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges') as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') group by f.query_id order by f.query_id) as g where e.build_num=3 and e.query_id=g.query_id) as G group by G.count order by G.count;

[query-3]
type = line
name = slice_ngrams_vertices
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select G.count as "Data Size", avg(if(G.graphType='SG' and G.dataset='nGrams', G.runTime/1000, NULL)) as "SG", avg(if(G.graphType='SG' and G.dataset='nGramsstructure', G.runTime/1000, NULL)) as "SGS", avg(if(G.graphType='OG' and G.dataset='nGrams', G.runTime/1000, NULL)) as "OG", avg(if(G.graphType='OG' and G.dataset='nGramsstructure', G.runTime/1000, NULL)) as "OGS", avg(if(G.graphType='HG' and G.dataset='nGrams', G.runTime/1000, NULL)) as "HG", avg(if(G.graphType='HG' and G.dataset='nGramsstructure', G.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.nodes) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='vertices') as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') group by f.query_id order by f.query_id) as g where e.build_num=3 and e.query_id=g.query_id) as G group by G.count order by G.count;

[query-4]
type = line
name = slice_ngrams_edges
xlabel = Select size, tuples
ylabel = Runtime, seconds
sql = select G.count as "Data Size", avg(if(G.graphType='SG' and G.dataset='nGrams', G.runTime/1000, NULL)) as "SG", avg(if(G.graphType='SG' and G.dataset='nGramsstructure', G.runTime/1000, NULL)) as "SGS", avg(if(G.graphType='OG' and G.dataset='nGrams', G.runTime/1000, NULL)) as "OG", avg(if(G.graphType='OG' and G.dataset='nGramsstructure', G.runTime/1000, NULL)) as "OGS", avg(if(G.graphType='HG' and G.dataset='nGrams', G.runTime/1000, NULL)) as "HG", avg(if(G.graphType='HG' and G.dataset='nGramsstructure', G.runTime/1000, NULL)) as "HGS" from (select e.runTime, e.graphType, g.count, g.dataset from execution e, (select f.query_id, sum(c.edges) as count, f.dset as dataset from data_size c, (select l.query_id, l.arg1 as dset, s.arg1 as date1, s.arg2 as date2 from (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Load' and o.arg1 like 'nGrams%%') as l, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Slice') as s, (select q.query_id, o.opType, o.arg1, o.arg2 from query_op_map q, operation o where q.op_id=o.op_id and o.opType='Return' and o.arg1='edges') as r where l.query_id=s.query_id and s.query_id=r.query_id) as f where str_to_date(c.date1, '%%Y-%%m-%%d') >= str_to_date(f.date1, '%%Y-%%m-%%d') and str_to_date(c.date2, '%%Y-%%m-%%d') <= str_to_date(f.date2, '%%Y-%%m-%%d') group by f.query_id order by f.query_id) as g where e.build_num=3 and e.query_id=g.query_id) as G group by G.count order by G.count;

